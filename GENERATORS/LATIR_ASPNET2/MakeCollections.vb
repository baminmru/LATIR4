Option Strict Off
Option Explicit On
Module MakeCollections
	
    Public Sub MakeColls(ByRef tid As String, ByRef m As MTZMetaModel.MTZMetaModel.Application, ByRef ot As MTZMetaModel.MTZMetaModel.OBJECTTYPE, ByRef p As MTZMetaModel.MTZMetaModel.PART, ByRef o As LATIRGenerator.Response)
        Dim s As String
        Dim i As Integer
        Dim f As MTZMetaModel.MTZMetaModel.FIELD

        Dim tt As MTZMetaModel.MTZMetaModel.OBJECTTYPE
        tt = TypeForStruct(p)
        s = "<%@ Control Language=""c#"" AutoEventWireup=""false"" Codebehind=""ucTab" & p.name & ".ascx.cs"" Inherits=""" & tt.Name & ".ASPNET.ucTab" & p.name & """ TargetSchema=""http://schemas.microsoft.com/intellisense/ie5""%>"
        s = s & vbCrLf & "  <asp:datagrid id=""DataGrid"" AllowPaging=""True"" AutoGenerateColumns=""False"" AllowSorting=""True"""
        s = s & vbCrLf & "  runat=""server"" Width=""100%"" BorderColor=""#CCCCCC"" BorderStyle=""None"" BorderWidth=""1px"" BackColor=""White"""
        s = s & vbCrLf & "  CellPadding=""3"">"
        s = s & vbCrLf & "  <SelectedItemStyle Font-Bold=""True"" ForeColor=""White"" BackColor=""#669999""></SelectedItemStyle>"
        s = s & vbCrLf & "  <AlternatingItemStyle BorderWidth=""1px"" BorderStyle=""Solid"" BorderColor=""Black""></AlternatingItemStyle>"
        s = s & vbCrLf & "  <ItemStyle BorderWidth=""1px"" ForeColor=""#000066"" BorderStyle=""Solid"" BorderColor=""Black""></ItemStyle>"
        s = s & vbCrLf & "  <HeaderStyle Font-Bold=""True"" BorderWidth=""1px"" ForeColor=""White"" BorderStyle=""Solid"" BorderColor=""Black"""
        s = s & vbCrLf & "    BackColor=""#006699""></HeaderStyle>"
        s = s & vbCrLf & "  <FooterStyle ForeColor=""#000066"" BackColor=""White""></FooterStyle>"
        s = s & vbCrLf & "  <PagerStyle HorizontalAlign=""Left"" ForeColor=""#000066"" BackColor=""White"" PageButtonCount=""10"""
        s = s & vbCrLf & "    Mode=""NumericPages""></PagerStyle>"
        s = s & vbCrLf & "</asp:datagrid>"
        s = s & vbCrLf & "<%=ClientScript()%>"
        s = s & vbCrLf & "<asp:HyperLink id=""HyperLinkAddNew"" runat=""server""></asp:HyperLink>"
        s = s & vbCrLf & "<script language=""javascript"" type=""text/javascript"">" & vbCrLf
        s = s & vbCrLf & "function " & p.name & "Load()" & vbCrLf
        s = s & vbCrLf & "{" & vbCrLf
        s = s & vbCrLf & "}" & vbCrLf
        s = s & vbCrLf & "function ElementShow(elName)" & vbCrLf
        s = s & vbCrLf & "{" & vbCrLf
        s = s & vbCrLf & " var el;" & vbCrLf
        s = s & vbCrLf & " el = document.getElementById(elName);" & vbCrLf
        s = s & vbCrLf & " if (el != null)" & vbCrLf
        s = s & vbCrLf & " {" & vbCrLf
        s = s & vbCrLf & "   el.style.display = '';" & vbCrLf
        s = s & vbCrLf & " }" & vbCrLf
        s = s & vbCrLf & "}" & vbCrLf
        s = s & vbCrLf & "function ElementHide(elName)" & vbCrLf
        s = s & vbCrLf & "{" & vbCrLf
        s = s & vbCrLf & " var el;" & vbCrLf
        s = s & vbCrLf & " el = document.getElementById(elName);" & vbCrLf
        s = s & vbCrLf & " if (el != null)" & vbCrLf
        s = s & vbCrLf & " {" & vbCrLf
        s = s & vbCrLf & "   el.style.display = 'none';" & vbCrLf
        s = s & vbCrLf & " }" & vbCrLf
        s = s & vbCrLf & "}" & vbCrLf
        s = s & vbCrLf & "</script>" & vbCrLf
        SetExt(o, "ucTab" & p.name & ".ASCX", "")
        o.Block = "code"
        o.OutNL(s)

        s = ""
        s = s & vbCrLf & "  namespace " & tt.Name & ".ASPNET"
        s = s & vbCrLf & "{"
        s = s & vbCrLf & "  #region MTZ ASP NET Generator code"
        s = s & vbCrLf & "  using System;"
        s = s & vbCrLf & "  using System.Data;"
        s = s & vbCrLf & "  using System.Collections;"
        s = s & vbCrLf & "  using System.Drawing;"
        s = s & vbCrLf & "  using System.Web;"
        s = s & vbCrLf & "  using System.Web.UI.WebControls;"
        s = s & vbCrLf & "  using System.Web.UI.HtmlControls;"
        s = s & vbCrLf & "  using Mokasin.ASPNET;"
        s = s & vbCrLf & "  using " & tt.Name & ";"
        s = s & vbCrLf & "  public class ucTab" & p.name & "  : ucParent"
        s = s & vbCrLf & "  {"
        s = s & vbCrLf & "    protected System.Web.UI.WebControls.DataGrid DataGrid;"
        s = s & vbCrLf & "    protected System.Web.UI.WebControls.HyperLink HyperLinkAddNew;"
        s = s & vbCrLf & "    // ƒÓ·‡‚ÎÂÌÌÓÂ ÛÍ‡ÏË"
        s = s & vbCrLf & "    string EditColumnName = ""EditColumn"";"
        s = s & vbCrLf & "    string EditColumnParameterName  = ""EditColumnParameter"";"
        s = s & vbCrLf & "    string DeleteParameterName = ""DeleteParameterName"";"
        s = s & vbCrLf & "    string DeleteColumnName = ""DeleteColumn"";"
        s = s & vbCrLf & "    string EditParameterName = ""EditParameterName"";"
        s = s & vbCrLf & "    string DeleteColumnParameterName = ""DeleteColumnParameter"";"

        s = s & vbCrLf & "    private int EditColumnIndex = -1;"
        s = s & vbCrLf & "    private int DeleteColumnIndex = -1;"
        s = s & vbCrLf & "    private int SelectColumnIndex = -1;"
        s = s & vbCrLf
        s = s & vbCrLf & "    public  " & tt.Name & "." & p.name & "_col DataSource"
        s = s & vbCrLf & "    { "
        s = s & vbCrLf & "      get"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        return (" & tt.Name & "." & p.name & "_col)base.MKSNDataSource;"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "    }"
        s = s & vbCrLf
        s = s & vbCrLf & "    private void Page_Load(object sender, System.EventArgs e)"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      if (!IsPostBack) PageNum = Parameter(""PageNum"");"
        s = s & vbCrLf & "      string EVENTTARGET = string.Empty;"
        s = s & vbCrLf & "      string EVENTARGUMENT = string.Empty;"
        s = s & vbCrLf & "      if (Request.Form[""__EVENTTARGET""] != null)   EVENTTARGET = Request.Form[""__EVENTTARGET""].ToString();"
        s = s & vbCrLf & "      if (Request.Form[""__EVENTARGUMENT""] != null)   EVENTARGUMENT = Request.Form[""__EVENTARGUMENT""].ToString();"

        s = s & vbCrLf & "    // ¡ÀŒ  ”ƒ¿À≈Õ»ﬂ «¿œ»—» begin"
        s = s & vbCrLf & "      if (EVENTTARGET  == DeleteParameterName + """ & p.name & """)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        string id = EVENTARGUMENT;"
        s = s & vbCrLf & "        if (id != string.Empty)"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "         // ”ƒ¿Àﬂ≈Ã Œ¡⁄≈ “"
        s = s & vbCrLf & "         DataSource.Delete(id);"
        s = s & vbCrLf & "         DataSource.Refresh();"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      // ¡ÀŒ  ”ƒ¿À≈Õ»ﬂ «¿œ»—» end"
        s = s & vbCrLf & "      // ¡ÀŒ  –≈ƒ¿ “»–Œ¬¿Õ»ﬂ «¿œ»—» begin"
        s = s & vbCrLf & "      if (EVENTTARGET == EditParameterName)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        string id = string.Empty;"
        s = s & vbCrLf & "        bool bEdit = false;"
        s = s & vbCrLf & "          try"
        s = s & vbCrLf & "          {"
        s = s & vbCrLf & "            bEdit = EVENTARGUMENT.Substring(0,1) == ""1"";"
        s = s & vbCrLf & "            id = EVENTARGUMENT.ToString().Substring(1);"
        s = s & vbCrLf & "          }"
        s = s & vbCrLf & "          catch{}"
        s = s & vbCrLf & "      if (id != string.Empty)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        string EditURL = Request.ApplicationPath + ""/"" + EditPage.URL(Server);"
        s = s & vbCrLf & "        AddParameter(ref EditURL, DataComponent.SelectIDParameterName, id);"
        s = s & vbCrLf & "        AddParameter(ref EditURL, ""PageNum"", DataGrid.CurrentPageIndex.ToString());"
        s = s & vbCrLf & "        AddParameter(ref EditURL, ""ObjectID"", this.ObjectID);"
        s = s & vbCrLf & "        if (!bEdit)"
        s = s & vbCrLf & "          AddParameter(ref EditURL, ""mode"", ""readonly"");"
        s = s & vbCrLf & "        Response.Redirect(EditURL);"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "     }"
        s = s & vbCrLf & "     // ¡ÀŒ  –≈ƒ¿ “»–Œ¬¿Õ»ﬂ «¿œ»—» end"
        s = s & vbCrLf & "     LoadData();"
        s = s & vbCrLf & "   }"
        s = s & vbCrLf & ""
        s = s & vbCrLf & "    private void LoadData()"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      try"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        DataGrid.CurrentPageIndex = Convert.ToInt32(PageNum);"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      catch"
        s = s & vbCrLf & "      {}"
        s = s & vbCrLf & "      if (DataTable == null)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "          if (DataSource != null)"
        s = s & vbCrLf & "              DataTable = DataSource.GetDataTable();"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      if (DataTable  != null)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        string SessionSort = string.Empty;"
        s = s & vbCrLf & "        string SortKey = ""Sort"";"
        s = s & vbCrLf & "        if (Session[DataTable.TableName + SortKey] != null) SessionSort  = Session[DataTable.TableName + SortKey].ToString();"
        s = s & vbCrLf & "        string UserClientDef = string.Empty;"
        s = s & vbCrLf & "        if (Session[""USERCLIENTDEF""] != null)"
        s = s & vbCrLf & "            UserClientDef = Session[""USERCLIENTDEF""].ToString();"
        s = s & vbCrLf & "        DataView = DataComponent.PrepareDataSource(DataTable, SessionSort, EditPage, UserClientDef, AllowEdit, Mode.ToLower().IndexOf(""readonly"") < -1, ref EditColumnName, ref EditColumnParameterName, ref DeleteColumnName, ref DeleteColumnParameterName, Server);"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf
        s = s & vbCrLf & "      DataGrid.DataSource = DataView;"
        s = s & vbCrLf & "      DataGrid.AutoGenerateColumns = false;"
        s = s & vbCrLf & "      DataGrid.Columns.Clear();"
        s = s & vbCrLf & "      BoundColumn BC ;"
        p.FIELD.Sort = "sequence"
        For i = 1 To p.FIELD.Count
            f = p.FIELD.Item(i)
            s = s & vbCrLf & "            BC = new BoundColumn();"
            s = s & vbCrLf & "            BC.DataField = """ & f.Name & """;"
            s = s & vbCrLf & "            BC.HeaderText = """ & f.Caption & """;"
            s = s & vbCrLf & "            BC.SortExpression = """ & f.Name & """;"
            s = s & vbCrLf & "            DataGrid.Columns.Add(BC);"
        Next
        s = s & vbCrLf & "      HyperLinkColumn hlc;"
        s = s & vbCrLf & "      if (Mode.IndexOf(""select"") > -1)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        hlc = new HyperLinkColumn();"
        s = s & vbCrLf & "        hlc.HeaderText = ""¬˚·Ó"";"
        s = s & vbCrLf & "        hlc.DataTextFormatString = ""¬˚·‡Ú¸"";"
        s = s & vbCrLf & "        hlc.DataTextField = ""ID"";"
        s = s & vbCrLf & "        hlc.DataNavigateUrlField = ""ID"";"
        s = s & vbCrLf & "        hlc.DataNavigateUrlFormatString = Request.UrlReferrer + ""?SelectedID={0}"";"
        s = s & vbCrLf & "        DataGrid.Columns.Add(hlc);"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      if (DataComponent.AddStatusColumn)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        if (DataView.Table.Columns.Contains(""StatusName""))"
        s = s & vbCrLf & "        { "
        s = s & vbCrLf & "          BoundColumn BCs = new BoundColumn();"
        s = s & vbCrLf & "          BCs.DataField = ""StatusName"";"
        s = s & vbCrLf & "          BCs.HeaderText = ""—Ú‡ÚÛÒ"";"
        s = s & vbCrLf & "          BCs.SortExpression = BCs.DataField;"
        s = s & vbCrLf & "          DataGrid.Columns.Add(BCs);"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      if (EditColumnName != string.Empty)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        BoundColumn EditColumn = new BoundColumn();"
        s = s & vbCrLf & "        DataGrid.Columns.Add(EditColumn);"
        s = s & vbCrLf & "        EditColumnIndex = DataGrid.Columns.Count -1 ;"
        s = s & vbCrLf & "      }"

        s = s & vbCrLf & "      //  ÓÎÓÌÍ‡ ‰Îˇ Û‰‡ÎÂÌËˇ ÒÚÓÍË."
        s = s & vbCrLf & "      if (AllowDelete) "
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        hlc = new HyperLinkColumn();"
        s = s & vbCrLf & "        hlc.DataTextFormatString = ""”‰‡ÎËÚ¸"";"
        s = s & vbCrLf & "        hlc.DataTextField = ""StatusName"";"
        s = s & vbCrLf & "        hlc.DataNavigateUrlField = DataComponent.DataNavigateUrlField;"
        s = s & vbCrLf & "        hlc.DataNavigateUrlFormatString = ""javascript:ConfirmDelete('{0}')"";"
        s = s & vbCrLf & "        DataGrid.Columns.Add(hlc);"
        s = s & vbCrLf & "        DeleteColumnIndex = DataGrid.Columns.Count - 1;"

        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      string SortOrder = string.Empty;"
        s = s & vbCrLf & "      string SortField = string.Empty;"
        s = s & vbCrLf & "      if (Session[DataTable.TableName + ""Sort""] != null)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        SortOrder = ""ASC"";"
        s = s & vbCrLf & "        SortField = Session[DataTable.TableName + ""Sort""].ToString();"
        s = s & vbCrLf & "        if (SortField.IndexOf("" "") > -1)"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "          SortOrder = SortField.Substring(SortField.IndexOf("" "") + 1);"
        s = s & vbCrLf & "          SortField = SortField.Substring(0, SortField.IndexOf("" ""));"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      if (SortField != string.Empty)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        foreach(DataGridColumn col in DataGrid.Columns )"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "          BoundColumn bcol = null;"
        s = s & vbCrLf & "          if (col is BoundColumn )"
        s = s & vbCrLf & "          {"
        s = s & vbCrLf & "            bcol = col as BoundColumn;"
        s = s & vbCrLf & "          }"
        s = s & vbCrLf & "          if (bcol.DataField == SortField)"
        s = s & vbCrLf & "          {"
        s = s & vbCrLf & "            if (SortOrder == ""DESC"")"
        s = s & vbCrLf & "            {"
        s = s & vbCrLf & "              bcol.HeaderText += "" \u25BC"";"
        s = s & vbCrLf & "              break;"
        s = s & vbCrLf & "            }"
        s = s & vbCrLf & "            else"
        s = s & vbCrLf & "            {"
        s = s & vbCrLf & "              bcol.HeaderText += "" \u25B2"";"
        s = s & vbCrLf & "              break;"
        s = s & vbCrLf & "            }"
        s = s & vbCrLf & "          }"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      DataGrid.AllowPaging = true;"
        s = s & vbCrLf & "      DataGrid.PagerStyle.Mode = PagerMode.NumericPages;"
        s = s & vbCrLf & "      DataGrid.PageSize = DataComponent.PagerSize;"
        s = s & vbCrLf & "      DataGrid.AllowSorting = true;"
        s = s & vbCrLf & "      DataGrid.DataBind();"
        s = s & vbCrLf & "      if (AllowAddNew && AllowEdit)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "         if (EditPage != null)"
        s = s & vbCrLf & "         {"
        s = s & vbCrLf & "           string EditURL = Request.ApplicationPath + ""/"" + EditPage.URL(Server);"
        s = s & vbCrLf & "           AddParameter(ref EditURL, PageNum, DataGrid.CurrentPageIndex.ToString());"
        s = s & vbCrLf & "           AddParameter(ref EditURL, ""mode"", ""addnew"");"
        s = s & vbCrLf & "           HyperLinkAddNew.Text = ""ƒÓ·‡‚ËÚ¸ ÌÓ‚Û˛ Á‡ÔËÒ¸"";"
        s = s & vbCrLf & "           HyperLinkAddNew.NavigateUrl = EditURL;"
        s = s & vbCrLf & "         }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "    }"

        s = s & vbCrLf & "    protected string ClientScript()"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      string Result = string.Empty;"
        s = s & vbCrLf & "      Result += ""<script language=\""Javascript\"">\n"";"
        s = s & vbCrLf & "      Result +=  ""function ConfirmDelete(id)\n"";"
        s = s & vbCrLf & "      Result += ""{\n"";"
        s = s & vbCrLf & "      Result += ""if (confirm('”‰‡ÎËÚ¸ Á‡ÔËÒ¸?') != 0)\n"";"
        s = s & vbCrLf & "      Result += ""{\n"";"
        s = s & vbCrLf & "      Result += ""__doPostBack('DeleteParameterName" & p.name & "',id);\n"";"
        s = s & vbCrLf & "      Result += ""}\n}\n"";"
        s = s & vbCrLf & "      Result += ""</script>\n"";"
        s = s & vbCrLf & "      Result += ""<script language=\""Javascript\"">\n"";"
        s = s & vbCrLf & "      Result +=  ""function LinkToEdit(id)\n"";"
        s = s & vbCrLf & "      Result += ""{\n"";"
        s = s & vbCrLf & "      Result += "" __doPostBack('"" + EditParameterName + ""',id);\n"";"
        s = s & vbCrLf & "      Result += ""}\n"";"
        s = s & vbCrLf & "      Result += ""</script>\n"";"
        s = s & vbCrLf & "      return Result;"
        s = s & vbCrLf & "    }"
        s = s & vbCrLf
        s = s & vbCrLf
        s = s & vbCrLf & "    private void DataGrid_SortCommand(object source, System.Web.UI.WebControls.DataGridSortCommandEventArgs e)"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      string SortOrder = ""ASC"";"
        s = s & vbCrLf & "      if  (Session[this.ID + DataTable.TableName + ""Sort""] != null)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        string OldField = Session[this.ID + DataTable.TableName + ""Sort""].ToString();"
        s = s & vbCrLf & "        string OldOrder = ""DESC"";"
        s = s & vbCrLf & "        if (OldField.IndexOf("" "") > -1)"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "          OldOrder = OldField.Substring(OldField.IndexOf("" "") + 1);"
        s = s & vbCrLf & "          OldField = OldField.Substring(0, OldField.IndexOf("" ""));"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "        if (OldField == e.SortExpression)"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "          if (OldOrder == ""ASC"") SortOrder = ""DESC"";"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "      Session[this.ID + DataTable.TableName + ""Sort""] = e.SortExpression + "" "" + SortOrder;"
        s = s & vbCrLf & "      LoadData();"
        s = s & vbCrLf & "    }"
        s = s & vbCrLf & "    override protected void OnInit(EventArgs e)"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      base.OnInit(e);"
        s = s & vbCrLf & "      InitializeComponent();"
        s = s & vbCrLf & "    }"
        s = s & vbCrLf
        s = s & vbCrLf & "    private void InitializeComponent()"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      this.Load += new System.EventHandler(this.Page_Load);"
        s = s & vbCrLf & "      this.DataGrid.PageIndexChanged += new DataGridPageChangedEventHandler(DataGrid_PageIndexChanged);"
        s = s & vbCrLf & "      this.DataGrid.SortCommand += new System.Web.UI.WebControls.DataGridSortCommandEventHandler(this.DataGrid_SortCommand);"
        s = s & vbCrLf & "      this.DataGrid.ItemDataBound += new System.Web.UI.WebControls.DataGridItemEventHandler(this.DataGrid_ItemDataBound);"
        s = s & vbCrLf & "    }"
        s = s & vbCrLf
        s = s & vbCrLf & "    private void DataGrid_PageIndexChanged(object source, DataGridPageChangedEventArgs e)"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      PageNum = e.NewPageIndex.ToString();"
        s = s & vbCrLf & "      LoadData();"
        s = s & vbCrLf & "    }"
        s = s & vbCrLf & "    private void DataGrid_ItemDataBound(object sender, System.Web.UI.WebControls.DataGridItemEventArgs e)"
        s = s & vbCrLf & "    {"
        s = s & vbCrLf & "      if (e.Item.ItemType==System.Web.UI.WebControls.ListItemType.AlternatingItem ||e.Item.ItemType==System.Web.UI.WebControls.ListItemType.Item)"
        s = s & vbCrLf & "      {"
        s = s & vbCrLf & "        DataRowView drv = null;"
        s = s & vbCrLf & "        if (e.Item.DataItem != null && e.Item.DataItem is DataRowView  )"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "          drv = (DataRowView )e.Item.DataItem;"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "        int Index = 0;"
        s = s & vbCrLf & "        foreach(TableCell cell in e.Item.Cells)"
        s = s & vbCrLf & "        {"
        s = s & vbCrLf & "          if (Index != DeleteColumnIndex && Index != EditColumnIndex && Index != SelectColumnIndex )"
        s = s & vbCrLf & "          {"
        s = s & vbCrLf & "            cell.Text = cell.Text.Replace(""0:00:00"", string.Empty);"
        s = s & vbCrLf & "            cell.Text = cell.Text.Replace(""30.12.1899"", string.Empty);"
        s = s & vbCrLf & "            Index++;"
        s = s & vbCrLf & "          }"
        s = s & vbCrLf & "          else"
        s = s & vbCrLf & "          {"
        s = s & vbCrLf & "            if (Index == EditColumnIndex )"
        s = s & vbCrLf & "            {"
        s = s & vbCrLf & "              if (EditColumnName != string.Empty)"
        s = s & vbCrLf & "              {"
        s = s & vbCrLf & "                 HyperLink hlc = new HyperLink();"
        s = s & vbCrLf & "                 if (AllowEdit)"
        s = s & vbCrLf & "                 {"
        s = s & vbCrLf & "                   hlc.Text = ""–Â‰‡ÍÚËÓ‚‡ÌËÂ"";"
        s = s & vbCrLf & "                   if (drv != null)"
        s = s & vbCrLf & "                   {"
        s = s & vbCrLf & "                     hlc.NavigateUrl = ""javascript:LinkToEdit('1"" + drv[""id""].ToString()  + ""')"";"
        s = s & vbCrLf & "                   }"
        s = s & vbCrLf & "                 }"
        s = s & vbCrLf & "               else"
        s = s & vbCrLf & "               {"
        s = s & vbCrLf & "                 hlc.Text = ""œÓÒÏÓÚ"";"
        s = s & vbCrLf & "                 if (drv != null)"
        s = s & vbCrLf & "                 {"
        s = s & vbCrLf & "                   hlc.NavigateUrl = ""javascript:LinkToEdit('0"" + drv[""id""].ToString()  + ""')"";"
        s = s & vbCrLf & "                 }"
        s = s & vbCrLf & "               }"
        s = s & vbCrLf & "               cell.Controls.Add(hlc);"
        s = s & vbCrLf & "            }"
        s = s & vbCrLf & "          }"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "        }"
        s = s & vbCrLf & "      }"
        s = s & vbCrLf & "    }"

        s = s & vbCrLf & "  }"
        s = s & vbCrLf & "  #endregion"
        s = s & vbCrLf & "}"
        SetExt(o, "ucTab" & p.name & ".ASCX.cs", "")
        o.Block = "code"
        o.OutNL(s)
        For i = 1 To p.PART.Count
            MakeColls(tid, m, ot, p.PART.Item(i), o)
        Next
    End Sub
End Module